{"version":3,"file":"data.js","names":["InstructionTypes","DepositTokenData","amount","_instruction","DepositToken","_amount","Buffer","from","serialize","depositTokenSchema","DepositSolData","DepositSol","depositSolSchema","InitializeData","startTime","dcaAmount","dcaTime","minimumAmountOut","Initialize","_startTime","_dcaAmount","_dcaTime","_minimumAmountOut","initializeSchema","SwapToSolData","SwapToSol","swapToSolSchema","SwapFromSolData","SwapFromSol","swapFromSolSchema","WithdrawTokenData","transferAmount","WithdrawToken","_transferAmount","withdrawTokenSchema","WithdrawSolData","WithdrawSol","withdrawSolSchema","FundTokenData","FundToken","fundTokenSchema","FundSolData","FundSol","fundSolSchema","Map","kind","fields"],"sources":["../../src/instruction/data.ts"],"sourcesContent":["import BN from \"bn.js\";\nimport { serialize } from \"borsh\";\n\nenum InstructionTypes {\n    DepositToken,\n    DepositSol,\n    Initialize,\n    SwapToSol,\n    SwapFromSol,\n    WithdrawToken,\n    WithdrawSol,\n    FundToken,\n    FundSol\n}\n\nexport class DepositTokenData {\n    private _instruction: InstructionTypes;\n    private _amount: BN;\n\n    constructor(amount: BN) {\n        this._instruction = InstructionTypes.DepositToken;\n        this._amount = amount;\n    }\n\n    public get instruction(): InstructionTypes {\n        return this._instruction;\n    }\n\n    public get amount(): BN {\n        return this._amount;\n    }\n\n    encode() {\n        return Buffer.from(serialize(depositTokenSchema, this));\n    }\n}\n\nexport class DepositSolData {\n    private _instruction: InstructionTypes;\n    private _amount: BN;\n\n    constructor(amount: BN) {\n        this._instruction = InstructionTypes.DepositSol;\n        this._amount = amount;\n    }\n\n    public get instruction(): InstructionTypes {\n        return this._instruction;\n    }\n\n    public get amount(): BN {\n        return this._amount;\n    }\n\n    encode() {\n        return Buffer.from(serialize(depositSolSchema, this));\n    }\n}\n\nexport class InitializeData {\n    private _instruction: InstructionTypes;\n    private _startTime: BN;\n    private _dcaAmount: BN;\n    private _dcaTime: BN;\n    private _minimumAmountOut: BN;\n\n    constructor(\n        startTime: BN,\n        dcaAmount: BN,\n        dcaTime: BN,\n        minimumAmountOut: BN\n    ) {\n        this._instruction = InstructionTypes.Initialize;\n        this._startTime = startTime;\n        this._dcaAmount = dcaAmount;\n        this._dcaTime = dcaTime;\n        this._minimumAmountOut = minimumAmountOut;\n    }\n\n    public get instruction(): InstructionTypes {\n        return this._instruction;\n    }\n    public get startTime(): BN {\n        return this._startTime;\n    }\n    public get dcaAmount(): BN {\n        return this._dcaAmount;\n    }\n    public get dcaTime(): BN {\n        return this._dcaTime;\n    }\n    public get minimumAmountOut(): BN {\n        return this._minimumAmountOut;\n    }\n\n    encode() {\n        return Buffer.from(serialize(initializeSchema, this))\n    }\n}\n\nexport class SwapToSolData {\n    private _instruction: InstructionTypes;\n    private _minimumAmountOut: BN;\n\n    constructor(minimumAmountOut: BN) {\n        this._instruction = InstructionTypes.SwapToSol;\n        this._minimumAmountOut = minimumAmountOut;\n    }\n\n    public get instruction(): InstructionTypes {\n        return this._instruction;\n    }\n\n    public get minimumAmountOut(): BN {\n        return this._minimumAmountOut;\n    }\n\n    encode() {\n        return Buffer.from(serialize(swapToSolSchema, this))\n    }\n}\n\nexport class SwapFromSolData {\n    private _instruction: InstructionTypes;\n    private _minimumAmountOut: BN;\n\n    constructor(minimumAmountOut: BN) {\n        this._instruction = InstructionTypes.SwapFromSol;\n        this._minimumAmountOut = minimumAmountOut;\n    }\n\n    public get instruction(): InstructionTypes {\n        return this._instruction;\n    }\n\n    public get minimumAmountOut(): BN {\n        return this._minimumAmountOut;\n    }\n\n    encode() {\n        return Buffer.from(serialize(swapFromSolSchema, this))\n    }\n}\n\nexport class WithdrawTokenData {\n    private _instruction: InstructionTypes;\n    private _transferAmount: BN;\n\n    constructor(transferAmount: BN) {\n        this._instruction = InstructionTypes.WithdrawToken;\n        this._transferAmount = transferAmount;\n    }\n\n    public get instruction(): InstructionTypes {\n        return this._instruction;\n    }\n\n    public get transferAmount(): BN {\n        return this._transferAmount;\n    }\n\n    encode() {\n        return Buffer.from(serialize(withdrawTokenSchema, this))\n    }\n}\n\nexport class WithdrawSolData {\n    private _instruction: InstructionTypes;\n    private _transferAmount: BN;\n\n    constructor(transferAmount: BN) {\n        this._instruction = InstructionTypes.WithdrawSol;\n        this._transferAmount = transferAmount;\n    }\n\n    public get instruction(): InstructionTypes {\n        return this._instruction;\n    }\n\n    public get transferAmount(): BN {\n        return this._transferAmount;\n    }\n\n    encode() {\n        return Buffer.from(serialize(withdrawSolSchema, this))\n    }\n}\n\nexport class FundTokenData {\n    private _instruction: InstructionTypes;\n    private _transferAmount: BN;\n\n    constructor(transferAmount: BN) {\n        this._instruction = InstructionTypes.FundToken;\n        this._transferAmount = transferAmount;\n    }\n\n    public get instruction(): InstructionTypes {\n        return this._instruction;\n    }\n\n    public get transferAmount(): BN {\n        return this._transferAmount;\n    }\n\n    encode() {\n        return Buffer.from(serialize(fundTokenSchema, this))\n    }\n}\n\nexport class FundSolData {\n    private _instruction: InstructionTypes;\n    private _transferAmount: BN;\n\n    constructor(transferAmount: BN) {\n        this._instruction = InstructionTypes.FundSol;\n        this._transferAmount = transferAmount;\n    }\n\n    public get instruction(): InstructionTypes {\n        return this._instruction;\n    }\n\n    public get transferAmount(): BN {\n        return this._transferAmount;\n    }\n\n    encode() {\n        return Buffer.from(serialize(fundSolSchema, this))\n    }\n}\n\nconst depositTokenSchema = new Map([\n    [\n        DepositTokenData,\n        {\n            kind: \"struct\",\n            fields: [\n                [\"instruction\", \"u8\"],\n                [\"amount\", \"u64\"],\n            ],\n        }\n    ]\n]);\n\nconst initializeSchema = new Map([\n    [\n        InitializeData,\n        {\n            kind: \"struct\",\n            fields: [\n                [\"instruction\", \"u8\"],\n                [\"startTime\", \"u64\"],\n                [\"dcaAmount\", \"u64\"],\n                [\"dcaTime\", \"u64\"],\n                [\"minimumAmountOut\", \"u64\"]\n            ]\n        }\n    ]\n])\n\nconst depositSolSchema = new Map([\n    [\n        DepositSolData,\n        {\n            kind: \"struct\",\n            fields: [\n                [\"instruction\", \"u8\"],\n                [\"amount\", \"u64\"],\n            ],\n        }\n    ]\n]);\n\nconst swapToSolSchema = new Map([\n    [\n        SwapToSolData,\n        {\n            kind: \"struct\",\n            fields: [\n                [\"instruction\", \"u8\"],\n                [\"minimumAmountOut\", \"u64\"],\n            ]\n        }\n    ]\n]);\n\nconst swapFromSolSchema = new Map([\n    [\n        SwapFromSolData,\n        {\n            kind: \"struct\",\n            fields: [\n                [\"instruction\", \"u8\"],\n                [\"minimumAmountOut\", \"u64\"],\n            ]\n        }\n    ]\n]);\n\nconst withdrawTokenSchema = new Map([\n    [\n        WithdrawTokenData,\n        {\n            kind: \"struct\",\n            fields: [\n                [\"instruction\", \"u8\"],\n                [\"transferAmount\", \"u64\"],\n            ],\n        }\n    ]\n]);\n\nconst withdrawSolSchema = new Map([\n    [\n        WithdrawSolData,\n        {\n            kind: \"struct\",\n            fields: [\n                [\"instruction\", \"u8\"],\n                [\"transferAmount\", \"u64\"],\n            ],\n        }\n    ]\n]);\n\nconst fundTokenSchema = new Map([\n    [\n        FundTokenData,\n        {\n            kind: \"struct\",\n            fields: [\n                [\"instruction\", \"u8\"],\n                [\"transferAmount\", \"u64\"],\n            ],\n        }\n    ]\n]);\n\nconst fundSolSchema = new Map([\n    [\n        FundSolData,\n        {\n            kind: \"struct\",\n            fields: [\n                [\"instruction\", \"u8\"],\n                [\"transferAmount\", \"u64\"],\n            ],\n        }\n    ]\n]);"],"mappings":"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"}