{"version":3,"file":"sol-helper.js","names":["isU64","amount","isLessThan","BigNumber","isGreaterThanOrEqualTo","RangeError","convertToLamports","decimal","_amount","multipliedBy","BN","toFixed","convertToDecimal","toString","dividedBy"],"sources":["../../src/utils/sol-helper.ts"],"sourcesContent":["import { LAMPORTS_PER_SOL } from \"@solana/web3.js\";\nimport BigNumber from \"bignumber.js\";\nimport BN from \"bn.js\";\n\nconst isU64 = (amount: BigNumber) => {\n    if (\n        amount.isLessThan(new BigNumber(0)) ||\n        amount.isGreaterThanOrEqualTo(new BigNumber(\"18446744073709551615\"))\n    ) {\n        throw new RangeError(\"The amount doesn't fit in unsigned 64-bit integer.\");\n    }\n}\n\n/** \n * Convert sol or token amounts to lamports\n * @returns Amount in lamports\n */\nexport function convertToLamports(amount: BigNumber, decimal = 9) {\n    const _amount = amount.multipliedBy(new BigNumber(10 ** decimal));\n    isU64(_amount);\n    return new BN(_amount.toFixed());\n}\n\n/** \n * Convert lamports to decimal\n * @returns Amount in lamports\n */\nexport function convertToDecimal(amount: BN, decimal = 9) {\n    const _amount = new BigNumber(amount.toString());\n    isU64(_amount);\n    return _amount.dividedBy(new BigNumber(10 ** decimal))\n}"],"mappings":";;;;;;;;AACA;;AACA;;;;AAEA,IAAMA,KAAK,GAAG,SAARA,KAAQ,CAACC,MAAD,EAAuB;EACjC,IACIA,MAAM,CAACC,UAAP,CAAkB,IAAIC,kBAAJ,CAAc,CAAd,CAAlB,KACAF,MAAM,CAACG,sBAAP,CAA8B,IAAID,kBAAJ,CAAc,sBAAd,CAA9B,CAFJ,EAGE;IACE,MAAM,IAAIE,UAAJ,CAAe,oDAAf,CAAN;EACH;AACJ,CAPD;AASA;AACA;AACA;AACA;;;AACO,SAASC,iBAAT,CAA2BL,MAA3B,EAA2D;EAAA,IAAbM,OAAa,uEAAH,CAAG;;EAC9D,IAAMC,OAAO,GAAGP,MAAM,CAACQ,YAAP,CAAoB,IAAIN,kBAAJ,UAAc,EAAd,EAAoBI,OAApB,EAApB,CAAhB;;EACAP,KAAK,CAACQ,OAAD,CAAL;EACA,OAAO,IAAIE,WAAJ,CAAOF,OAAO,CAACG,OAAR,EAAP,CAAP;AACH;AAED;AACA;AACA;AACA;;;AACO,SAASC,gBAAT,CAA0BX,MAA1B,EAAmD;EAAA,IAAbM,OAAa,uEAAH,CAAG;;EACtD,IAAMC,OAAO,GAAG,IAAIL,kBAAJ,CAAcF,MAAM,CAACY,QAAP,EAAd,CAAhB;;EACAb,KAAK,CAACQ,OAAD,CAAL;EACA,OAAOA,OAAO,CAACM,SAAR,CAAkB,IAAIX,kBAAJ,UAAc,EAAd,EAAoBI,OAApB,EAAlB,CAAP;AACH"}