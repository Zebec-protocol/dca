{"version":3,"file":"online-client.js","names":["DcaOnlineClient","params","connection","commitment","preflightCommitment","_wallet","wallet","txn","signers","publicKey","WalletNotConnectedError","_connection","getLatestBlockhash","blockhash","recentBlockhash","lastValidBlockHeight","partialSign","signTransaction","signedTxn","sendRawTransaction","serialize","_preflightCommitment","skipPreflight","signature","confirmTransaction","_commitment","owner","mint","amount","makeDepositTokenTransaction","transaction","dcaAccount","signAndSendTransaction","status","data","makeDepositSolTransaction","startTime","dcaAmount","dcaTime","makeInitializeTransaction","makeWithdrawTokenTransaction","makeWithdrawSolTransaction","makeSwapFromSolTransaction","makeSwapToSolTransaction","makeFundTokenTransaction","makeFundSolTransaction","DcaClient"],"sources":["../../src/clients/online-client.ts"],"sourcesContent":["import BigNumber from \"bignumber.js\";\n\nimport { WalletNotConnectedError } from \"@solana/wallet-adapter-base\";\nimport { Commitment, Connection, PublicKey, Signer, Transaction } from \"@solana/web3.js\";\n\nimport { DcaClient, IWalletAdapter } from \"./base\";\n\nexport class DcaOnlineClient extends DcaClient {\n\tprivate _wallet: IWalletAdapter;\n\tconstructor(params: {\n\t\twallet: IWalletAdapter;\n\t\tconnection: Connection;\n\t\tcommitment: Commitment;\n\t\tpreflightCommitment: Commitment;\n\t}) {\n\t\tsuper({\n\t\t\tconnection: params.connection,\n\t\t\tcommitment: params.commitment,\n\t\t\tpreflightCommitment: params.preflightCommitment,\n\t\t});\n\t\tthis._wallet = params.wallet;\n\t}\n\n\tprivate async signAndSendTransaction(txn: Transaction, signers?: Signer[]): Promise<string> {\n\t\ttry {\n\t\t\tif (!this._wallet.publicKey) {\n\t\t\t\tthrow new WalletNotConnectedError(\"No wallet is connected.\");\n\t\t\t}\n\t\t\tconst blockhash = await this._connection.getLatestBlockhash();\n\t\t\ttxn.recentBlockhash = blockhash.blockhash;\n\t\t\ttxn.lastValidBlockHeight = blockhash.lastValidBlockHeight;\n\t\t\tif (signers) {\n\t\t\t\ttxn.partialSign(...signers);\n\t\t\t}\n\t\t\tconst signedTxn = await this._wallet.signTransaction(txn);\n\t\t\tconst signature = await this._connection.sendRawTransaction(signedTxn.serialize(), {\n\t\t\t\tpreflightCommitment: this._preflightCommitment,\n\t\t\t\tskipPreflight: false,\n\t\t\t});\n\t\t\tawait this._connection.confirmTransaction(\n\t\t\t\t{\n\t\t\t\t\tblockhash: blockhash.blockhash,\n\t\t\t\t\tlastValidBlockHeight: blockhash.lastValidBlockHeight,\n\t\t\t\t\tsignature: signature,\n\t\t\t\t},\n\t\t\t\tthis._commitment,\n\t\t\t);\n\t\t\treturn signature;\n\t\t} catch (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * Deposit non-native token in dca program vault\n\t */\n\tasync depositToken(owner: PublicKey, mint: PublicKey, amount: BigNumber) {\n\t\ttry {\n\t\t\tconst { transaction, dcaAccount } = await this.makeDepositTokenTransaction(owner, mint, amount);\n\n\t\t\tconst signature = await this.signAndSendTransaction(transaction, [dcaAccount]);\n\n\t\t\treturn {\n\t\t\t\tstatus: \"success\",\n\t\t\t\tdata: {\n\t\t\t\t\tsignature: signature,\n\t\t\t\t\tdcaAccount: dcaAccount.publicKey,\n\t\t\t\t},\n\t\t\t};\n\t\t} catch (e) {\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\t/**\n\t * Deposit sol in dca vault\n\t */\n\tasync depositSol(owner: PublicKey, mint: PublicKey, amount: BigNumber) {\n\t\ttry {\n\t\t\tconst { transaction, dcaAccount } = await this.makeDepositSolTransaction(owner, mint, amount);\n\n\t\t\tconst signature = await this.signAndSendTransaction(transaction, [dcaAccount]);\n\n\t\t\treturn {\n\t\t\t\tstatus: \"success\",\n\t\t\t\tdata: {\n\t\t\t\t\tsignature: signature,\n\t\t\t\t\tdcaAccount: dcaAccount.publicKey,\n\t\t\t\t},\n\t\t\t};\n\t\t} catch (e) {\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\t/**\n\t * Intialize dca process\n\t */\n\tasync initialize(\n\t\towner: PublicKey,\n\t\tmint: PublicKey,\n\t\tdcaAccount: PublicKey,\n\t\tstartTime: BigNumber,\n\t\tdcaAmount: BigNumber,\n\t\tdcaTime: BigNumber,\n\t) {\n\t\ttry {\n\t\t\tconst transaction = await this.makeInitializeTransaction(owner, mint, dcaAccount, startTime, dcaAmount, dcaTime);\n\n\t\t\tconst signature = await this.signAndSendTransaction(transaction);\n\n\t\t\treturn {\n\t\t\t\tstatus: \"success\",\n\t\t\t\tdata: {\n\t\t\t\t\tsignature: signature,\n\t\t\t\t},\n\t\t\t};\n\t\t} catch (e) {\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\t/**\n\t * Withdraw non-native token from vault\n\t */\n\tasync withdrawToken(owner: PublicKey, mint: PublicKey, dcaAccount: PublicKey, amount: BigNumber) {\n\t\ttry {\n\t\t\tconst transaction = await this.makeWithdrawTokenTransaction(owner, mint, dcaAccount, amount);\n\n\t\t\tconst signature = await this.signAndSendTransaction(transaction);\n\n\t\t\treturn {\n\t\t\t\tstatus: \"success\",\n\t\t\t\tdata: {\n\t\t\t\t\tsignature: signature,\n\t\t\t\t},\n\t\t\t};\n\t\t} catch (e) {\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\t/**\n\t * Withdraw native token from vault\n\t */\n\tasync withdrawSol(owner: PublicKey, mint: PublicKey, dcaAccount: PublicKey, amount: BigNumber) {\n\t\ttry {\n\t\t\tconst transaction = await this.makeWithdrawSolTransaction(owner, mint, dcaAccount, amount);\n\n\t\t\tconst signature = await this.signAndSendTransaction(transaction);\n\n\t\t\treturn {\n\t\t\t\tstatus: \"success\",\n\t\t\t\tdata: {\n\t\t\t\t\tsignature: signature,\n\t\t\t\t},\n\t\t\t};\n\t\t} catch (e) {\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\t/**\n\t * Swap token from sol\n\t */\n\tasync swapFromSol(owner: PublicKey, mint: PublicKey, dcaAccount: PublicKey) {\n\t\ttry {\n\t\t\tconst transaction = await this.makeSwapFromSolTransaction(owner, mint, dcaAccount);\n\n\t\t\tconst signature = await this.signAndSendTransaction(transaction);\n\n\t\t\treturn {\n\t\t\t\tstatus: \"success\",\n\t\t\t\tdata: {\n\t\t\t\t\tsignature: signature,\n\t\t\t\t},\n\t\t\t};\n\t\t} catch (e) {\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\t/**\n\t * Swap Token to Sol\n\t */\n\tasync swapToSol(owner: PublicKey, mint: PublicKey, dcaAccount: PublicKey) {\n\t\tconst transaction = await this.makeSwapToSolTransaction(owner, mint, dcaAccount);\n\n\t\tconst signature = await this.signAndSendTransaction(transaction);\n\n\t\treturn {\n\t\t\tstatus: \"success\",\n\t\t\tdata: {\n\t\t\t\tsignature: signature,\n\t\t\t},\n\t\t};\n\t}\n\n\t/**\n\t * Fund non-native token to existing vault\n\t */\n\tasync fundToken(owner: PublicKey, mint: PublicKey, dcaAccount: PublicKey, amount: BigNumber) {\n\t\ttry {\n\t\t\tconst transaction = await this.makeFundTokenTransaction(owner, mint, dcaAccount, amount);\n\n\t\t\tconst signature = await this.signAndSendTransaction(transaction);\n\n\t\t\treturn {\n\t\t\t\tstatus: \"success\",\n\t\t\t\tdata: {\n\t\t\t\t\tsignature: signature,\n\t\t\t\t},\n\t\t\t};\n\t\t} catch (e) {\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\t/**\n\t * Fund native token to existing vault\n\t */\n\tasync fundSol(owner: PublicKey, mint: PublicKey, dcaAccount: PublicKey, amount: BigNumber) {\n\t\ttry {\n\t\t\tconst transaction = await this.makeFundSolTransaction(owner, mint, dcaAccount, amount);\n\n\t\t\tconst signature = await this.signAndSendTransaction(transaction);\n\n\t\t\treturn {\n\t\t\t\tstatus: \"success\",\n\t\t\t\tdata: {\n\t\t\t\t\tsignature: signature,\n\t\t\t\t},\n\t\t\t};\n\t\t} catch (e) {\n\t\t\tthrow e;\n\t\t}\n\t}\n}\n"],"mappings":"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"}