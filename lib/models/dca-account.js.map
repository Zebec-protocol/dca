{"version":3,"file":"dca-account.js","names":["DcaFlag","DcaAccount","param","_totalAmount","totalAmount","_authority","PublicKey","authority","_mintAddress","mintAddress","_startTime","startTime","_dcaAmount","dcaAmount","_dcaTime","dcaTime","_flag","flag","_state","state","_minimumAmountOut","minimumAmountOut","data","deserializeUnchecked","dcaAccountSchema","connection","address","commitment","programId","DCA_PROGRAM_ID","getAccountInfo","info","Error","owner","equals","dcaAcount","decodeUnchecked","Map","kind","fields"],"sources":["../../src/models/dca-account.ts"],"sourcesContent":["import BN from \"bn.js\";\nimport { deserializeUnchecked } from \"borsh\";\n\nimport { Commitment, Connection, PublicKey } from \"@solana/web3.js\";\n\nimport { DCA_PROGRAM_ID } from \"../constants\";\n\nexport enum DcaFlag {\n\t\"SOL-MINT\" = 1,\n\t\"MINT-SOL\" = 2,\n}\n\n/**\n * The class for the dca account state in DCA program\n */\nexport class DcaAccount {\n\tprivate _totalAmount: BN;\n\tprivate _authority: PublicKey;\n\tprivate _mintAddress: PublicKey;\n\tprivate _startTime: BN;\n\tprivate _dcaAmount: BN;\n\tprivate _dcaTime: BN;\n\tprivate _flag: number;\n\tprivate _state: boolean;\n\tprivate _minimumAmountOut: BN;\n\n\tconstructor(param: {\n\t\ttotalAmount: BN;\n\t\tauthority: Uint8Array;\n\t\tmintAddress: Uint8Array;\n\t\tstartTime: BN;\n\t\tdcaAmount: BN;\n\t\tdcaTime: BN;\n\t\tflag: number;\n\t\tstate: number;\n\t\tminimumAmountOut: BN;\n\t}) {\n\t\tthis._totalAmount = param.totalAmount;\n\t\tthis._authority = new PublicKey(param.authority);\n\t\tthis._mintAddress = new PublicKey(param.mintAddress);\n\t\tthis._startTime = param.startTime;\n\t\tthis._dcaAmount = param.dcaAmount;\n\t\tthis._dcaTime = param.dcaTime;\n\t\tthis._flag = param.flag;\n\t\tthis._state = param.state === 1;\n\t\tthis._minimumAmountOut = param.minimumAmountOut;\n\t}\n\n\t/**\n\t * The total amount of currency or token which will be used for dca process.\n\t */\n\tpublic get totalAmount(): BN {\n\t\treturn this._totalAmount;\n\t}\n\n\t/**\n\t * The address of authority who deposit and initiates the dca process.\n\t */\n\tpublic get authority(): PublicKey {\n\t\treturn this._authority;\n\t}\n\n\t/**\n\t * The token mint address which is used to swap from or to sol (native mint).\n\t */\n\tpublic get mintAddress(): PublicKey {\n\t\treturn this._mintAddress;\n\t}\n\n\t/**\n\t * The unix timestamp from which the last swap is performed.\n\t */\n\tpublic get startTime(): BN {\n\t\treturn this._startTime;\n\t}\n\n\t/**\n\t * The amount of currency or token to be used for the swap from the total amount at a time.\n\t */\n\tpublic get dcaAmount(): BN {\n\t\treturn this._dcaAmount;\n\t}\n\n\t/**\n\t * The time interval or span between to consecutive swap process. The value should be in seconds.\n\t */\n\tpublic get dcaTime(): BN {\n\t\treturn this._dcaTime;\n\t}\n\n\t/**\n\t * The state signifies whether the dca process has been initialized or not.\n\t */\n\tpublic get state(): boolean {\n\t\treturn this._state;\n\t}\n\n\t/**\n\t * The flag tells whether to swap from sol to mint or mint to sol.\n\t */\n\tpublic get flag(): number {\n\t\treturn this._flag;\n\t}\n\n\t/**\n\t * The minimum amount out expected from the swap.\n\t */\n\tpublic get minimumAmountOut(): BN {\n\t\treturn this._minimumAmountOut;\n\t}\n\n\t/**\n\t * Decode buffer data to DcaAccount Object\n\t */\n\tstatic decodeUnchecked(data: Buffer) {\n\t\treturn deserializeUnchecked(dcaAccountSchema, this, data);\n\t}\n\n\t/**\n\t * Get Dca account info of given address\n\t */\n\tstatic async getDcaAccountInfo(\n\t\tconnection: Connection,\n\t\taddress: PublicKey,\n\t\tcommitment?: Commitment,\n\t\tprogramId = DCA_PROGRAM_ID,\n\t) {\n\t\tconst info = await connection.getAccountInfo(address, commitment);\n\t\tif (!info) throw new Error(\"Dca Account not found.\");\n\t\tif (!info.owner.equals(programId)) throw new Error(\"Account is not owned by Dca Program.\");\n\t\tconst dcaAcount = this.decodeUnchecked(info.data);\n\t\treturn dcaAcount;\n\t}\n}\n\nconst dcaAccountSchema = new Map([\n\t[\n\t\tDcaAccount,\n\t\t{\n\t\t\tkind: \"struct\",\n\t\t\tfields: [\n\t\t\t\t[\"totalAmount\", \"u64\"],\n\t\t\t\t[\"authority\", [32]],\n\t\t\t\t[\"mintAddress\", [32]],\n\t\t\t\t[\"startTime\", \"u64\"],\n\t\t\t\t[\"dcaAmount\", \"u64\"],\n\t\t\t\t[\"dcaTime\", \"u64\"],\n\t\t\t\t[\"flag\", \"u8\"],\n\t\t\t\t[\"state\", \"u8\"],\n\t\t\t\t[\"minimumAmountOut\", \"u64\"],\n\t\t\t],\n\t\t},\n\t],\n]);\n"],"mappings":"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"}